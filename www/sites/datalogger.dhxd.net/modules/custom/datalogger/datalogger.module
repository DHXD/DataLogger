<?php

function datalogger_menu() {
  $items['create/stations'] = array(
      'title' => 'Station',
      'page callback' => '_datalogger_nodes',
      'access callback' => TRUE
  );

  $items['command'] = array(
      'title' => 'Station',
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_command_form'
      ),
      'access callback' => TRUE
  );

  return $items;
}

function _datalogger_init_node($title, $field_station_code,
    $field_station_sim_number, $field_station_address, $field_station_longitude,
    $field_station_latitude, $field_station_password,
    $field_station_transmission_speed, $field_station_power,
    $field_station_diagnostic_error) {
  $node = new stdClass();
  $node->title = $title;
  $node->type = 'station';
  $node->created = time();
  $node->changed = $node->created;
  $node->status = 1; // Published?
  $node->promote = 0; // Display on front page?
  $node->sticky = 0; // Display top of page?
  $node->format = 1; // Filtered HTML?
  $node->uid = 1; // Content owner uid (author)?
  $node->language = 'und';

  node_object_prepare($node);
  $node->field_station_code[$node->language][0]['value'] = $field_station_code;
  $node->field_station_address[$node->language][0]['value'] = $field_station_address;
  $node->field_station_diagnostic_error[$node->language][0]['value'] = $field_station_diagnostic_error;
  $node->field_station_latitude[$node->language][0]['value'] = $field_station_latitude;
  $node->field_station_longitude[$node->language][0]['value'] = $field_station_longitude;
  $node->field_station_password[$node->language][0]['value'] = $field_station_password;
  $node->field_station_power[$node->language][0]['value'] = $field_station_power;
  $node->field_station_sim_number[$node->language][0]['value'] = $field_station_sim_number;
  $node->field_station_transmission_speed[$node->language][0]['value'] = $field_station_transmission_speed;

  $node = node_submit($node);
  node_save($node);
}

function _datalogger_nodes() {
  // for ($i = 1; $i < 227; $i ++) {
  // _datalogger_init_node("Station - " . $i, "Code - " . $i, "Address - " . $i, 1, $i, $i,
  // "Password" . $i, $i, "0168123456" . (78 + $i), $i);
  // }

  return "Finished Create Stations.";
}

function _command_form($form, &$form_submit) {

  // $commands = array(
      // 'date_time_set' => 'Date & Time Set',
      // 'gprs_network_time_synchronization'=>'GPRS Network Time Synchronization',
      // 'set_id'=>'Set ID',
      // 'get_id'=>'Get ID',
      // 'set_password'=>'Set Password',
      // 'get_password'=>'Get Password',
      // 'all_database_buffer_clear' => 'All Database Buffer Clear',
      // 'specific_date_database_buffer_clear' => 'Specific Date Database Buffer Clear',
      // 'accumulated_rain_fall_value_set' => 'Accumulated Rain Fall Value Set',
      // 'set_rain_fall_clear_time' => 'Set Rain Fall Clear Time',
      // 'get_rain_fall_clear_time' => 'Get Rain Fall Clear Time',
      // 'self_power_reset'=>'Self Power Reset',
      // 'set_active_deactive_battery_power_volt'=>'Set Active Deactive Battery Power Volt',
      // 'get_active_deactive_battery_power_volt'=>'Get Active Deactive Battery Power Volt',
      // 'set_battery_volt_offset'=>'Set Battery Volt Offset',
      // 'get_battery_volt_offset'=>'Get Battery Volt Offset',
      // 'set_auto_power_management_nable'=>'Set Auto Power Management Nable',
      // 'get_auto_power_management_nable'=>'Get Auto Power Management Nable',
      // 'goto_sleep_mode'=>'Goto Sleep Mode',
      // 'set_data_send_interval_minutes'=>'Set Data Send Interval Minutes',
      // 'get_data_send_interval_minutes'=>'Get Data Send Interval Minutes',
      // 'set_communication_type'=>'Set Communication Type',
      // 'get_communication_type'=>'Get Communication Type',
      // 'set_gprs_network_setting'=>'Set GPRS Network Setting',
      // 'get_gprs_network_setting'=>'Get GPRS Network Setting',
      // 'set_host_netword_information'=>'Set Host Netword Information',
      // 'get_host_netword_information'=>'Get Host Netword Information',
      // 'set_host_phone_number'=>'Set Host Phone Number',
      // 'get_host_phone_number'=>'Get Host Phone Number',
      // 'get_data_logger_firmware'=>'Get Data Logger Firmware Version',
  // );

  // $form['command_first'] = array(
      // '#type' => 'select',
      // '#title' => 'Command',
      // '#options' => $commands,

  // );

  // $form['host_phone_number'] = array(
      // '#type' => 'textfield',
      // '#title' => t('Host Phone Number'),
      // '#cols' => 30,
      // '#rows' => 1
  // );

  // $form['submit'] = array(
      // '#type' => 'submit',
      // '#value' => t('Send Now!'),
      // '#submit' => array(
          // 'deductible_submit'
      // )
  // );

  // return $form;
  $form = array();
  $form['changethis'] = array(
    '#title' => t("Choose something and explain why"),
    '#type' => 'select',
    '#options' => array(
      'one' => 'one',
      'two' => 'two',
      'three' => 'three',
    ),
    '#ajax' => array(
      // #ajax has two required keys: callback and wrapper.
      // 'callback' is a function that will be called when this element changes.
      'callback' => 'ajax_example_simplest_callback',
      // 'wrapper' is the HTML id of the page element that will be replaced.
      'wrapper' => 'replace_textfield_div',
      // There are also several optional keys - see ajax_example_autocheckboxes
      // below for details on 'method', 'effect' and 'speed' and
      // ajax_example_dependent_dropdown for 'event'.
     ),
  );

  // This entire form element will be replaced whenever 'changethis' is updated.
  $form['replace_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t("Why"),
    // The prefix/suffix provide the div that we're replacing, named by
    // #ajax['wrapper'] above.
    '#prefix' => '<div id="replace_textfield_div">',
    '#suffix' => '</div>',
  );

  // An AJAX request calls the form builder function for every change.
  // We can change how we build the form based on $form_state.
  if (!empty($form_state['values']['changethis'])) {
    $form['replace_textfield']['#description'] = t("Say why you chose '@value'", array('@value' => $form_state['values']['changethis']));
  }
  return $form;

}