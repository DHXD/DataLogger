<?php
/**
 *Author:hungnm0302
 *Description: Xuat du lieu ra file excel
 */
function _datalogger_submit_report($form, &$form_state){
	$province = $form_state['values']['field_station_province_city_value'];
	$station_nids = $form_state['values']['field_rainfall_station_nid'];
	$min_time = $form_state['values']['field_rainfall_send_time_value']['min'];
	$max_time = $form_state['values']['field_rainfall_send_time_value']['max'];
	$view_name = $form_state['view']->name;
	$view = views_get_view($view_name);
	if (is_object($view)) {
    $view->init_display();
		// $view->set_display(); // like 'block_1'    
    $view->pre_execute();
    $view->execute();
		// $view->render();  
    $view_resul = $view->result;
  }
	// module_load_include('inc', 'datalogger', 'datalogger.admin.excel');
	
	module_load_include('inc', 'datalogger', 'datalogger.admin.statistics.excel');
	
	if(count($view_resul) <= 0){
		drupal_set_message(t('Rainfall stations in the no data to report'),'error');
	}
	else{
		if(count(station_nids) == 1 ){
			$nid = $station_nids;
		}
		else{
			$nid = null;
		}
		// $args = array($nid, $view_resul, null, null, null, null);
		
		$args = array($nid, $view_resul);
		
		_export_excel($args);
	}
}

function _datalogger_station_status(){
	return array(
		'station_active' => 'Đang Hoạt Động',
		'station_deactive' => 'Không Hoạt Động',
		'station_error' => 'Đang Lỗi',
	);
}
/**
 *Implements hook_openlayers_styles().
 *Author:hungnm0302
 *Description: thiet lap style cho ban do
 */
function datalogger_openlayers_styles(&$map) {
  return $map['styles'];
}

 /**
 *Begin:15/11. 
 *Implements hook_views_form_alter().
 *Author:hungnm0302
 *Description: thay doi ket qua hien thi tren form cua view
 */	
function datalogger_form_alter(&$form, &$form_state, &$form_id){
	global $user;
	$account = user_load($user->uid);
	if(!in_array('administrator', array_values($account->roles))){
		if($form_id = 'views_exposed_form'){
			if($form['#id'] == 'views-exposed-form-view-command-send-station-page' || 
				$form['#id'] == 'views-exposed-form-view-rainfall-default-page' ||
				$form['#id'] == 'views-exposed-form-search-rainfall-page' ||
				$form['#id'] == 'views-exposed-form-rainfall-chart-page' ||
				$form['#id'] == 'views-exposed-form-view-list-stations-page' ||
				$form['#id'] == 'views-exposed-form-view-rainfall-chart-hour-page' ||
				$form['#id'] == 'views-exposed-form-view-command-send-station-page' ||
				$form['#id'] == 'views-exposed-form-view-station-rainfall-statistics-page' ){
					//danh sach tinh / thanh pho
					$provinces = array();
					$provinces['All'] = t('- Any -');
					$provinces = array_merge($provinces, _datalogger_return_city2($account->field_station_region['und'][0]['value']));
					$form['field_station_province_city_value']['#options'] = $provinces;
					
					//them moi nut xuat bao cao
					$form["submit_report"] = array(
						"#type" => "submit",
						"#value" => t("Report"),
						'#weight' => 110,
						'#submit' => array('_datalogger_submit_report'),
					);
					
					/*
					khong hien thi button xuat bao cao voi form: 
					Bieu do mua theo gio
					Bieu do mua theo phut
					*/

					if($form['#id'] == 'views-exposed-form-view-list-stations-page' || 
						$form['#id'] == 'views-exposed-form-view-command-send-station-page' 
					){

						$form["submit_report"]['#access'] = false;
					}
					
					//thiet lap dinh dang ngay/gio cho truong thoi gian
					$form['field_rainfall_send_time_value']['min']['#date_format'] = 'd/m/Y H:i';
					$form['field_rainfall_send_time_value']['max']['#date_format'] = 'd/m/Y H:i';
					
					$region_station = $account->field_station_region['und'][0]['value'];
					for($i = 0; $i < count (array_keys($provinces)); $i++){

						//$province = array_keys($provinces)[$i];

						if($province == 'All'){
							$stations_list = views_get_view_result('view_station_filter_parameter', Null,	$region_station, 'all', 'all');
						}
						else{
							$stations_list = views_get_view_result('view_station_filter_parameter', Null,	$region_station, $province, 'all');
						}
						$stations = array();
						// $stations['All'] = t('- Any -');
						foreach($stations_list as $station){
							$stations['key-' . $station->nid] = $station->node_title;
							$stations_view[$station->nid] = $station->node_title;
							
						}
						$station_follow_provinces[$province] = $stations;
					}
					
					
					// drupal_add_js(drupal_get_path('module', 'datalogger').'/list_station_follow_province.js');
					// drupal_add_js(array('datalogger' => array('list_station_province' => $station_follow_provinces)),'setting');
					//thiet lap gia tri tham so cho file javascript
					drupal_add_js(array('datalogger' => array('list_station_province' => $station_follow_provinces)),'setting');
					//view cac lenh da thuc hien theo tung khu vuc 
					/*view: thong ke lương mua
					 *view: tra cuu so lieu mua
					 *view: cac lenh da thuc hien theo tung khu vuc
					 *view: bieu do mua theo gio
					 *view: bieu do mua theo phut
					 */
					if($form['#id'] == 'views-exposed-form-view-station-rainfall-statistics-page' ||//thong ke luong mua
							$form['#id'] == 'views-exposed-form-search-rainfall-page' ||//tra cuu luong mua
							$form['#id'] == 'views-exposed-form-view-rainfall-default-page' ||
							$form['#id'] == 'views-exposed-form-view-rainfall-chart-hour-page' ||//bieu do theo gio
							$form['#id'] == 'views-exposed-form-rainfall-chart-page'){//bieu do theo op
								drupal_add_js(drupal_get_path('module', 'datalogger').'/list_station_follow_province.js');
								$form['field_rainfall_station_nid']['#options'] = $stations_view;
					}
					
					if($form['#id'] == 'views-exposed-form-view-command-send-station-page'){
						$form['field_command_station_nid']['#options'] = $stations_view;
						drupal_add_js(drupal_get_path('module', 'datalogger').'/list_station_follow_province_send_command.js');
					}
					//hien thi luong mua theo tung khu vuc
					if($form['#id'] == 'views-exposed-form-view-rainfall-default-page'){
						$form['field_station_region_value']['#disabled'] = TRUE;
						$form['field_rainfall_station_nid_1']['#options'] = $stations_view;
					}
			}
		}
	}
}
 /**
 *Begin:15/11. 
 *Implements hook_views_pre_render().
 *Author:hungnm0302
 *Description: khong hien thi thong tin admin tren view
 */	
 
function datalogger_views_pre_render(&$view) {
  global $user;
  if($view->name == "view_list_user") {
			for($i; $i < $view->total_rows; $i++){
				if($view->result[$i]->uid == 1){
					unset($view->result[$i]);
				}
			}
  }
	else if($view->name == "view_all_station") {		
		if (!in_array('administrator', array_values($user->roles)) && !in_array('control datalogger', array_values($user->roles))) {
			unset($view->field['nid']);
		}
		if ($user->uid != 1)	unset($view->field['nid']);		
	}	
	else if($view->name == "view_list_stations") {
		if ($user->uid != 1)	unset($view->field['nid']);		
	}	  
} 

/*
 *Implements hook_views_pre_render().
 *Author:hungnm0302
 *Description: thay đổi query hiển thị trạm theo từng khu vực trên user
 */
 function datalogger_views_query_alter(&$view, &$query) {
  if($view->name == 'view_list_user' ) {
		global $user;
		$account = user_load($user->uid);
		if(in_array('administrator', array_values($user->roles))){
			$query->where[1]['conditions'][1]['value'] = array(north_central_region,mid_central_region,
							south_central_region,south_region,central_highlands);
			$query->where[1]['conditions'][1]['operator'] = 'IN';
		}
		elseif(isset($account->field_station_region['und']) && in_array('manage data', array_values($user->roles))){
			foreach($account->field_station_region['und'] as $region){
				$regions[] = $region['value'];
			}
			if(count($regions) > 1){
				$query->where[1]['conditions'][1]['value'] = $regions;
				$query->where[1]['conditions'][1]['operator'] = 'IN';
			}
			else{
				$query->where[1]['conditions'][1]['value'] = $regions;
			}
		}
  }
	//view: hien thi cac tram do mưa theo khu vuc thuc hien lenh
	//view: hien thi cac tram do mưa theo khu vuc tren ban do
	//view: hien thi cac lenh da thuc hien  theo khu vuc
	if($view->name == "view_list_stations" || $view->name == "view_map_stations" || $view->name == "view_map_alarm_stations" || $view->name == 'view_command_send_station' || $view->name == 'view_station_rainfall_statistics' || $view->name == 'rainfall_chart'||$view->name == 'search_rainfall' || $view->name == "view_modems" ||$view->name == "view_rainfall_default"	||$view->name == "view_map_station_deactive"||$view->name == "view_map_alarm_stations_rainfall" ||$view->name == "view_rainfall_chart_hour"	) {
		global $user;
		$account = user_load($user->uid);
		if(in_array('administrator', array_values($user->roles))){
			$query->where[1]['conditions'][2]['value'] = array(north_central_region,mid_central_region,
							south_central_region,south_region,central_highlands);
			$query->where[1]['conditions'][2]['operator'] = 'IN';
		}
		elseif(isset($account->field_station_region['und'])){
			foreach($account->field_station_region['und'] as $region){
				$regions[] = $region['value'];
			}
			if(count($regions) > 1){
				$query->where[1]['conditions'][2]['value'] = $regions;
				$query->where[1]['conditions'][2]['operator'] = 'IN';
			}
			else{
				$query->where[1]['conditions'][2]['value'] = $regions;
			}
		}
		
		// /*
		if(count($query->where[1]['conditions'][3]['value']) == 2){
			// $sql = 'DATE_FORMAT(FROM_UNIXTIME(field_data_field_rainfall_send_time.field_rainfall_send_time_value), \'%Y-%m-%d %H:%i\') >= :field_data_field_rainfall_send_time_field_rainfall_send_time_value AND DATE_FORMAT(FROM_UNIXTIME(field_data_field_rainfall_send_time.field_rainfall_send_time_value), \'%Y-%m-%d %H:%i\') <= :field_data_field_rainfall_send_time_field_rainfall_send_time_value1';
			$sql = 'DATE_FORMAT(FROM_UNIXTIME(field_data_field_rainfall_send_time.field_rainfall_send_time_value), \'%d\/%m\/%Y %H:%i\') >= :field_data_field_rainfall_send_time_field_rainfall_send_time_value AND DATE_FORMAT(FROM_UNIXTIME(field_data_field_rainfall_send_time.field_rainfall_send_time_value), \'%d\/%m\/%Y %H:%i\') <= :field_data_field_rainfall_send_time_field_rainfall_send_time_value1';
			
			$query->where[1]['conditions'][3]['field'] = $sql;
			$time_min = $query->where[1]['conditions'][3]['value'][':field_data_field_rainfall_send_time_field_rainfall_send_time_value'];
			$time_max = $query->where[1]['conditions'][3]['value'][':field_data_field_rainfall_send_time_field_rainfall_send_time_value1'];
			
			$query->where[1]['conditions'][3]['value'][':field_data_field_rainfall_send_time_field_rainfall_send_time_value'] = date('d/m/Y H:i',strtotime($time_min));
			$query->where[1]['conditions'][3]['value'][':field_data_field_rainfall_send_time_field_rainfall_send_time_value1'] = date('d/m/Y H:i',strtotime($time_max));
		}
		// */
  }
	//view: quan ly thong tin tram
	
	if($view->name == "view_list_stations_role_manage") {
		global $user;
		if (!in_array('administrator', array_values($user->roles))) {
			$account = user_load($user->uid);
			if(isset($account->field_station_region['und'])){
				foreach($account->field_station_region['und'] as $region){
							$query->where[1]['conditions'][2]['value'] = $region['value'];
				}
			}
		}
		else{
			$query->where[1]['conditions'][2]['value'] = array(north_central_region,mid_central_region,
							south_central_region,south_region,central_highlands);
			$query->where[1]['conditions'][2]['operator'] = 'IN';
		}
  }
	
}

/**
 * 18/10. 
 */
 
 
 // tao cay chua ngay thang nam
 
 
function datalogger_block_info() {
  // This example comes from node.module.
  $blocks['tree'] = array(
    'info' => t('Trạm'),
   // 'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}
function test3($batdau, $ketthuc)
{
  $result = "";
  $number = 1;
  $result .= '<div id="demo1" class="demo" style="height: 100px;width:150px; overflow-x:hidden ; overflow-y: scroll; padding-bottom:10px;"><ul>';
  //$number++;
  for ($i = $batdau; $i <= $ketthuc; $i = date ( 'Y-m-d' , strtotime('+1 day', strtotime($i)) ))
  {
    //$batdau = strtotime ( '-1 day' , strtotime ( $batdau ) ) ;
    //$a = date ( 'Y-m-j' , $i );
    $result .= '<li id="phtml_' . $number++ . '"><a href="#">' . $i . '</a><ul>';
    for($j=0;$j<24;$j++)
    {
      $result .= "<li id='phtml_" . $number++ . "'><a href='#'>" . $j . '</a></li>';
    }
    $result .= '</ul></li>';
  }
  $result .= '</ul></div>';
  return $result;
}
function datalogger_block_view($delta = '') {
  switch($delta){
    case 'tree':
      $block['subject'] = t('Trạm');
      if(user_access('access content')){
       //Retrieve and process data here.
       
        $module_path = drupal_get_path('module', 'datalogger');
        
        
        drupal_add_js($module_path . '/treeview/_lib/jquery.js');
        drupal_add_js($module_path . '/treeview/_lib/jquery.cookie.js');
        drupal_add_js($module_path . '/treeview/_lib/jquery.hotkeys.js');
        drupal_add_js($module_path . '/treeview/jquery.jstree.js');
       // drupal_add_css($module_path . '/treeview/_docs/syntax/!style.css');
       // drupal_add_css($module_path . '/treeview/_docs/!style.css');
        
        drupal_add_js('
        jQuery(document).ready(function($){
        $("#demo1")
          // call `.jstree` with the options object
          .jstree({
            // the `plugins` array allows you to configure the active plugins on this instance
            "plugins" : ["themes","html_data","ui","crrm","hotkeys"],
            // each plugin you have included can have its own config object
            "core" : { "initially_open" : [ "phtml_1" ] }
            // it makes sense to configure a plugin only if overriding the defaults
          })
          // EVENTS
          // each instance triggers its own events - to process those listen on the container
          // all events are in the `.jstree` namespace
          // so listen for `function_name`.`jstree` - you can function names from the docs
          .bind("loaded.jstree", function (event, data) {
            // you get two params - event & data - check the core docs for a detailed description
          });
        
        });', 'inline');
        //dpm($_REQUEST);
        $begin = $_REQUEST['field_rainfall_send_time_value']['min']['date'];
		    $end = $_REQUEST['field_rainfall_send_time_value']['max']['date'];
      
        $block['content'] = test3($begin,$end);;
        return $block;
   } 
  }
}
function datalogger_action_info() {
	GLOBAL $options_commands;
  return array(
			'datalogger_send_command_action' => array(
      'type' => 'node',
      'label' => t('Send commands to multiple stations'),
      'configurable' => FALSE,
			'aggregate' => TRUE,
      'behavior' => array('changes_property'),
      'triggers' => array('node_presave', 'node_insert', 'node_update'),
    ),
  );
}

function datalogger_send_command_action(&$object, $context = array()){
	$nid;
	foreach($object as $node){
		$nid .= $node->nid.'/';
	}
	drupal_goto('command/'.$nid);
}

 /**
 * Implements hook_menu().
 */
 
function datalogger_menu() {

/**
 *Begin: 25/11. 
 *author: hungnm0302
 *description: ftp tranferer
 */	
$items['gammu/sentitems/error'] = array(
    'title' => 'List of commands being sent error',
    'page callback' => '_datalogger_check_error_send_command_form',
    'file' => 'datalogger.admin.inc',
    'access callback' => TRUE,
		'page arguments' => array(1),
		'type' => MENU_CALLBACK,
  );
	

 /**
 *Begin: 25/11. 
 *author: hungnm0302
 *description: ftp tranferer
 */		
  $items['manage/ftpserver'] = array(
    'title' => 'FPT server',
    'page callback' => '_datalogger_ftp_server',
		'file' => 'datalogger.admin.inc',
    'access callback' => TRUE,
  );

/**
 *Begin: 17/11. 
 *author: Phan Văn Tuấn
 *description: tạo menu xuất báo cáo theo năm+ngay
 */
	$items['manage/report/rainfalls/day'] = array(
    'title' => 'Daily rainfall data reports',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
		'type' => MENU_DEFAULT_LOCAL_TASK, 
		'weight' => -25,
  );
	
 $items['manage/report/rainfalls'] = array(
    'title' => 'Daily rainfall data reports',
		'page callback' => 'drupal_get_form',
    'page arguments' => array(
        '_datalogger_report_rainfall_day_form'
    ),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
		'type' => MENU_NORMAL_ITEM, 
		'weight' => -26,
	);
	
	$items['manage/report/rainfalls/all/station'] = array(
    'title' => 'Statistics of rainfall during the day',
		'page callback' => 'drupal_get_form',
    'page arguments' => array(
        '_datalogger_report_rainfall_all_station_in_day_form'
    ),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
		'type' => MENU_LOCAL_TASK, 
		'weight' => -25,
	);
	
  
  $items['manage/report/rainfalls/year'] = array(
    'title' => 'Report annual rainfall data',
		'page callback' => 'drupal_get_form',
    'page arguments' => array(
        '_datalogger_report_rainfall_year_form'
    ),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
		'type' => MENU_LOCAL_TASK,
		'weight' => -23,
  );


/**
	*Begin date:10-10-12
 *Tạo menu gọi lại menu command
 */
  $items['sendallcommand'] = array(
    'page callback' => '_datalogger_send_command',
    'file' => 'datalogger.admin.inc',
    'access arguments' => array('control datalogger'),
  );	
	
/**
*Begin date:10-10-12
*Tạo menu gọi lại menu command
*/
  $items['datalogger/command/refresh/ajax'] = array (
    'title' => 'Command',
    'page callback' => 'datalogger_command_refresh_ajax',
    'file' => 'datalogger.admin.inc',    
    'access arguments' => array('control datalogger'),
  );

	
/**
 *Begin date:09-10-12
 *kiểm tra tin nhắn mới trong bang: inbox
 */
  $items['gammu/inbox/checksms'] = array(
    'title' => 'Kiểm tra inbox',
    'page callback' => '_datalogger_check_inbox',
    'file' => 'datalogger.admin.inc',
    'access callback' => TRUE,
  );
	
	$items['view/test/view'] = array(
    'title' => 'Kiem tra cac truong tren view',
    'page callback' => 'test_view',
    'file' => 'datalogger.admin.inc',
    'access callback' => TRUE,
  );
  
/**
 *Begin date:03-10-12
 *tạo dữ liệu Mưa.
 */
  $items['gammu/inbox/new'] = array(
    'title' => 'Check new messages',
    'page callback' => '_datalogger_new_sms_form',
    'file' => 'datalogger.admin.inc',
    'access callback' => TRUE,
		'page arguments' => array(1),
		'type' => MENU_CALLBACK,
  );
  
  $items['gammu/inbox/remote'] = array(    
    'title' => 'Gammu Inbox Remotely',
    'page callback' => '_datalogger_gammu_inbox_remote',    
    'file' => 'datalogger.admin.sms.inc',    
    'access callback' => TRUE,
  );
 
/**
 *Begin date:12-09-12
 *tạo dữ liệu Mưa.
 */
  $items['manage/user'] = array(
    'title' => 'Quản lý thông tin người dùng',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_user_form'),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
    'type' => MENU_NORMAL_ITEM,  
  );
  
  $items['manage/user/user'] = array(
    'title' => 'Quản lý quyền hạn',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
    'type' => MENU_DEFAULT_LOCAL_TASK,   
    
  );
  $items['manage/user/group'] = array(
    'title' => 'Quản lý nhóm',   
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_user_group_form'),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
    'type' => MENU_LOCAL_TASK,
    'weight' => -25,
  );
   
  $items['manage/user/pass'] = array(
    'title' => 'Quản lý password',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_user_pass_form'),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
    'type' => MENU_LOCAL_TASK,
    'weight' => -24,
  );
   
  $items['manage/user/profile'] = array(
    'title' => 'Quản lý profile',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_user_profile_form'),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
    'type' => MENU_LOCAL_TASK,
    'weight' => -23,
  ); 
 
/**
 *Begin date:11-09-12
 *tạo dữ liệu Mưa.
 */

 /*nhat ki tich hop du lieu*/
 $items['manage/log/rainfall'] = array(
    'title' => 'Integrated log data',
    'page callback' => '_log_rainfall_form',
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
  );
 
 $items['manage/report/rainfalls/month'] = array(
    'title' => 'Report monthly rainfall data',
		'page callback' => 'drupal_get_form',
    'page arguments' => array(
        '_datalogger_report_rainfall_month_form'
    ),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
		 'type' => MENU_LOCAL_TASK,
		 'weight' => -24,
  );
 
  $items['manage/init/rainfalls'] = array(
    'title' => 'Tạo lượng mưa',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_datalogger_generate_rainfalls_form'),
    'file' => 'datalogger.admin.inc',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
  );
  
/**
 *Begin date:09-09-12
 *phát triển giao diện quản lý dữ liệu
 */
  $items['manage/data'] = array(
    'title' => 'Quản lý dữ liệu',
    'page callback' => '_manage_data',
    'file' => 'datalogger.admin.inc',
    'access arguments' => array('manage data'),
    'access callback' => '_datalogger_menu_access_callback_manage_data',
  );
  
	$items['form/view'] = array(
    'title' => 'Thống kê lượng mưa',
		'access callback' => '_datalogger_menu_access_callback_manage_data',
		'type' => MENU_DEFAULT_LOCAL_TASK, 
		'weight' => -25,
  );
	
	$items['form/view/statistics'] = array(
    'title' => 'Thống kê lượng mưa',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_datalogger_form_view_statistics_form', 1),
    'file' => 'datalogger.admin.inc',
    'access arguments' => array('manage data', 1),
    'access callback' => '_datalogger_menu_access_callback_manage_data',
    'description' => 'Thống kê lượng Mưa theo giờ',
    'type' => MENU_NORMAL_ITEM,
    'weight' => -25,
  );
  $items['form/view/chart'] = array(
    'title' => 'Biểu đồ lượng mưa theo giờ',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_datalogger_form_view_chart_form',1),
    'file' => 'datalogger.admin.inc',
    'access arguments' => array('manage data', 1),
    'access callback' => '_datalogger_menu_access_callback_manage_data',
    'description' => 'Biểu đồ lượng Mưa',
    'type' => MENU_LOCAL_TASK,
    'weight' => -24,
  );
  
/**
 *Begin date:old
 */
  $items['create/stations'] = array(
      'title' => t('Station'),
      'page callback' => '_datalogger_nodes',
      'file' => 'datalogger.admin.inc',
      'access callback' => TRUE
  );

  $items['command'] = array(
    'title' => t('Command'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array(
        '_command_form'
    ),
    'file' => 'datalogger.admin.inc',
    'access callback' => '_datalogger_menu_access_callback_command',
  );
  
  $items['logs'] = array(
      'title' => t('Logs'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array(
          '_log_nodes'
      ),
      'file' => 'datalogger.admin.inc',
      'access callback' => TRUE
  );

  $items['view/stations'] = array(
      'title' => t('List All Station'),
      'page callback' => '_view_translate_station',
      'file' => 'datalogger.admin.inc',
      'access callback' => TRUE
  );

  $items['view/logs'] = array(
      'title' => t('Log Manage'),
      'page callback' => '_view_translate_log',
      'file' => 'datalogger.admin.inc',
      'access callback' => TRUE
  );
 
  $items['phpexcel'] = array(
      'title' => t('Export to excel'),
      'page callback' => '_export_excel',
      'file' => 'datalogger.admin.excel.inc',
      'access callback' => TRUE
  );
 
  return $items;
}

function _datalogger_menu_access_callback_node($permission, $node) {
  return user_access($permission) && $node->type == 'station';
}

function _datalogger_menu_access_callback_command() {
  return (user_access('administrator') || user_access('control datalogger'));
}

function _datalogger_menu_access_callback_manage_data() {
  return user_access('manage data')|| user_access('khuvucbactrungbo')|| user_access('khuvuctrungtrungbo')|| user_access('khuvucnamtrungbo')|| user_access('khuvucnambo')|| user_access('khuvuctaynguyen');
}

/**
 * Implements hook_permission().
 */
 
function datalogger_permission() {
  return array(
    'manage data' => array(
      'title' => t('Manage data'), 
      'description' => t('Perform manage data.'),
      'restrict access' => TRUE,
    ),
		
    'control datalogger' => array(
      'title' => t('Control Datalogger'), 
      'description' => t('Perform control datalogger.'),
      'restrict access' => TRUE,
    ),
		
    'khuvucbactrungbo' => array(
      'title' => t('khuvucbactrungbo'), 
      'description' => t('Perform khuvucbactrungbo.'),
      'restrict access' => TRUE,
    ),
		
    'khuvuctrungtrungbo' => array(
      'title' => t('khuvuctrungtrungbo'), 
      'description' => t('Perform khuvuctrungtrungbo.'),
      'restrict access' => TRUE,
    ),
		
    'khuvucnamtrungbo' => array(
      'title' => t('khuvucnamtrungbo'), 
      'description' => t('Perform khuvucnamtrungbo.'),
      'restrict access' => TRUE,
    ),
		
    'khuvucnambo' => array(
      'title' => t('khuvucnambo'), 
      'description' => t('Perform khuvucnambo.'),
      'restrict access' => TRUE,
    ),
		
    'khuvuctaynguyen' => array(
      'title' => t('khuvuctaynguyen'), 
      'description' => t('Perform khuvuctaynguyen.'),
      'restrict access' => TRUE,
    ),
		
  );
}


function _datalogger_station_title_callback($node) {
  if ($node->type == 'station' ) {
		drupal_set_title(t('Station infomation: ').$node->title);
    return t('Station infomation');
  }
  else {
    return t('View');
  }
}

/*
 * Implements hook_openlayers_map_alter().
 */
function datalogger_openlayers_map_alter(&$map) {
  if (isset($map['layers']['mapquest_osm_offline'])) {
    $map['layers']['mapquest_osm_offline']['url'][0] = '/tiles/${z}/${x}/${y}.png';     // set local URL using special hard coded format.
    $map['layers']['mapquest_osm_offline']['serverResolutions'] = array();              // empty the array
  }
}

function _datalogger_return_area($arg = null){
	$areas = array(
		north_central_region => t('North Central Region'),
		mid_central_region  => t('Central Central Region'),  
		south_central_region  => t('South Central Region'),
		south_region => t('South Region'),
		central_highlands => t('Central Highlands Region'),
	);
	if(empty($arg) || $arg == Null || $arg == ''){
		return $areas;
	}
	return $areas[$arg];
}

function _datalogger_return_city($arg = null){
	$areas = _datalogger_return_city2(null);
	$provinces = array();
	foreach($areas as $area){
		$provinces = array_merge($provinces, $area);
	}
	if(empty($arg) || $arg == Null || $arg == ''){
		return $provinces;
	}
	return $provinces[$arg];
}

function _datalogger_return_city2($arg = null){
	$provinces = array(
		north_central_region => array(
			thanh_hoa => ('Thanh Hóa'),
			nghe_an => ('Nghệ An'),
			ha_tinh => ('Hà Tĩnh'),
		),
		// paging1 => '------------------',
		mid_central_region => array(
			quang_binh => ('Quảng Bình'),
			quang_tri => ('Quảng Trị'),
			thua_thien_hue => ('Thừa Thiên - Huế'),
			da_nang => ('Đà Nẵng'),
			quang_nam => ('Quảng Nam'),
			quang_ngai => ('Quảng Ngãi'),
		),
		// paging2 => '------------------',
		south_central_region => array(
			binh_dinh => ('Bình Định'),
			phu_yen => ('Phú Yên'),
			khanh_hoa => ('Khánh Hòa'),
			ninh_thuan => ('Ninh Thuận'),
			binh_thuan => ('Bình Thuận'),
		),
		// paging3 => '------------------',
		south_region => array(
			binh_duong => ('Bình Dương'),
			tay_ninh => ('Tây Ninh'),
			tien_gian => ('Tiền Giang'),
			tra_vinh => ('Trà Vinh'),
			can_tho => ('Cần Thơ'),
			soc_trang => ('Sóc Trăng'),
			dong_thap => ('Đồng Tháp'),
			binh_phuoc => ('Bình Phước'),
			an_giang => ('An Giang'),
			kien_giang => ('Kiên Giang'),
			ca_mau => ('Cà Mau'),
			ben_tre => ('Bến Tre'),
			ba_ria_vung_tau => ('Bà Rịa - Vũng Tàu'),
			vinh_long => ('Vĩnh Long'),
			hau_giang => ('Hậu Giang'),
		),
		// paging4 => '------------------',
		central_highlands  => array(
			lam_dong => ('Lâm Đồng'),
			kom_tum => ('Kon Tum'),
			giai_lai => ('Gia Lai'),
			dak_lak => ('Đắk Lắk'),
			dak_nong => ('Đắk Nông'),
		),
	);
	if(empty($arg) || $arg == Null || $arg == ''){
		return $provinces;
	}
	return $provinces[$arg];
}
